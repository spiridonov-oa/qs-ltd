<?xml version='1.0' encoding='UTF-8' ?> 
<modification>
    <id>Advanced Seo URL</id>
    <version>0.1b</version>
    <vqmver>2.4.1</vqmver>
    <author>Nikita Bulatenko [nikita.bulatenko@gmail.com]</author>
    
    <file name="catalog/controller/module/language.php">
        <operation>
            <search position="replace"><![CDATA[$this->redirect($this->request->post['redirect']);]]></search>
            <add><![CDATA[
                $url = $this->request->post['redirect'];
                $url = preg_replace('/'.addcslashes($this->request->server['HTTP_HOST'], '.-/').'\/[a-z]{2}\//', $this->request->server['HTTP_HOST'] . '/', $url);
                $url = str_replace($this->request->server['HTTP_HOST'], $this->request->server['HTTP_HOST']. '/'.$this->session->data['language'], $url);
                $this->redirect($url);
            ]]></add>
        </operation>

        <operation>
            <search position="replace" offset="9"><![CDATA[foreach ($results as $result) {]]></search>
            <add><![CDATA[
        foreach ($results as $result) {
            if (!isset($this->request->get['_route_'])) {
                $link = $this->request->server['HTTP_HOST'] . '/' . $result['code'];
            } else {
                $url = $this->request->get['_route_'];
                $pos = strpos($this->request->get['_route_'], '/');
                if($pos == 2){
                    $url = substr($url, 3);
                }
                 $link = $this->request->server['HTTP_HOST'] . '/' . $result['code'] . '/' . $url;
            }
            $link = 'http://' . $link;
			if ($result['status']) {
				$this->data['languages'][] = array(
					'name'  => $result['name'],
					'code'  => $result['code'],
                    'link'  => $link,
					'image' => $result['image']
				);
			}
		}
            ]]></add>
        </operation>
    </file>
    
    <file name="catalog/controller/common/seo_url.php">

        <operation>
            <search position="replace"><![CDATA[$this->request->get['route'] = 'error/not_found';]]></search>
            <add><![CDATA[
                if(empty($this->request->get['route'])) {
                    $this->request->get['route'] = 'error/not_found';
                }
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[if(empty($this->request->get['route'])) {]]></search>
            <add><![CDATA[
                if(!isset($this->request->get['route'])){
                    $route = '';
                    foreach($parts as $part) {
                        $route .= '/' . $part;
                    }
                    $route = substr($route, 1);
                    $this->request->get['route'] = $route;
                }
            ]]></add>
        </operation>

        <operation>
            <search position="replace"><![CDATA[return $url_info['scheme'] . '://' . $url_info['host'] . (isset($url_info['port']) ? ':' . $url_info['port'] : '') . str_replace('/index.php', '', $url_info['path']) . $url . $query;]]></search>
            <add><![CDATA[
                return $url_info['scheme'] . '://' . $url_info['host'] . (isset($url_info['port']) ? ':' . $url_info['port'] : '') . str_replace('/index.php', '', $url_info['path']) . '/' . $this->session->data['language'] . $url . $query;
            ]]></add>
        </operation>

        <operation>
            <search position="replace"><![CDATA[$parts = explode('/', $this->request->get['_route_']);]]></search>
            <add><![CDATA[
                $parts = explode('/', trim($this->request->get['_route_'], '/'));
                if(!empty($parts[0]) && preg_match('/^[a-z]{2}$/iu', $parts[0])) {
                    array_shift($parts);
                }
            ]]></add>
        </operation>

        <operation>
            <search position="after" offset="2"><![CDATA[$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = '" . $this->db->escape($key . '=' . (int)$value) . "'");]]></search>
            <add><![CDATA[
                        if ($data['route'] == 'product/product') {
                            $url = $this->getProductPath($value);
                            unset($data['path']);
                        }
            ]]></add>
        </operation>

        <operation>
            <search position="bottom" offset="2"><![CDATA[]]></search>
            <add><![CDATA[
                private function getProductPath ($productId) {
                    $this->load->model('catalog/product');
                    $this->load->model('catalog/category');
                    $path = '';
                    $categories = $this->model_catalog_product->getCategories($productId);

                    if(!empty($categories)) {
                        $product_categories = array();
                        foreach ($categories as $category) {
                            $product_categories[$category['category_id']] = $this->getFullCategoryPath($category['category_id']);
                        }

                        foreach ($product_categories as $category_path) {
                            if(strlen($path) < strlen($category_path)) {
                                $path = $category_path;
                            }
                        }
                    }

                    return $path;
                }

                private function getFullCategoryPath ($category_id) {
                    $category_path = '';
                    if($category_id != 0) {
                        $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "url_alias WHERE `query` = 'category_id=" . (int)$category_id . "'");
                        if ($query->num_rows) {
                            //$category_path[$category_id] = '/' . $query->row['keyword'];
                            $path = '/' . $query->row['keyword'];
                        } else {
                            //$category_path[$category_id] = '/' . 'unnamed_category';
                            $path = '/' . 'unnamed_category';
                        }

                        $category = $this->model_catalog_category->getCategory($category_id);
                        if(isset($category['parent_id'])) {
                            $category_path = $this->getFullCategoryPath($category['parent_id']) . $path;
                        }
                    }

                    return $category_path;
                }
            ]]></add>
        </operation>

        <operation>
            <search position="after" offset="2"><![CDATA[return $this->forward($this->request->get['route']);]]></search>
            <add><![CDATA[
        if (isset($this->request->get['route'])) {
            return $this->forward($this->request->get['route']);
        }
            ]]></add>
        </operation>

        <operation>
            <search position="before"><![CDATA[if ($url) {]]></search>
            <add><![CDATA[
                if (isset($data['route']) && $url == '') {
                    $url = '/' . $data['route'];
                }
            ]]></add>
        </operation>

        <operation>
            <search position="after"><![CDATA[unset($data['route']);]]></search>
            <add><![CDATA[
            if ($url == '/common/home') {
                $url = '';
            }
            if (substr($url, -1) != '/') {
                $url .= '/';
            }
            ]]></add>
        </operation>


    </file>
    
    <file name="catalog/controller/product/product.php">
        <operation>
            <search position="before"><![CDATA[$this->load->model('catalog/manufacturer');]]></search>
            <add><![CDATA[
                else {
                    $this->checkForCategory();
                }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[public function index() {]]></search>
            <add><![CDATA[
                protected function checkForCategory() {
                    $this->load->model('catalog/product');
                    $this->load->model('catalog/category');
                    $productId = $this->request->get['product_id'];
                    $categories = $this->model_catalog_product->getCategories($productId);
                    if(!empty($categories)) {
                        $info = array();
                        foreach($categories as $category) {
                            $info[$category['category_id']] = $this->model_catalog_category->getCategory($category['category_id']);
                        }
/*
                        $categories_array = array();
                        foreach($categories as $category) {
                            $this->getParentCategory($category['category_id'], $categories_array);
                        }
*/
                        foreach($info as $category) {
                            $parent_id = $category['parent_id'];
                            if(isset($info[$parent_id]['parent_id']) && $info[$parent_id]['parent_id'] > 0) {
                                $path = $info[$info[$parent_id]['parent_id']]['parent_id'] . '_' . $info[$parent_id]['parent_id'] . '_' . $parent_id . '_' . $category['category_id'];
                                $this->redirect($this->url->link('product/product', 'path=' . $path .  '&product_id=' . $productId));
                                exit();
                            }
                        }
                        foreach($info as $category) {
                            $parent_id = $category['parent_id'];
                            if(isset($info[$parent_id]) && $info[$parent_id]['parent_id'] > 0) {
                                $path = $info[$parent_id]['parent_id'] . '_' . $parent_id . '_' . $category['category_id'];
                                $this->redirect($this->url->link('product/product', 'path=' . $path .  '&product_id=' . $productId));
                                exit();
                            }
                        }
                        foreach($info as $category) {
                            $parent_id = $category['parent_id'];
                            if(isset($info[$parent_id]) && $info[$parent_id] > 0) {
                                $path = $parent_id . '_' . $category['category_id'];
                                $this->redirect($this->url->link('product/product', 'path=' . $path .  '&product_id=' . $productId));
                                exit();
                            }
                        }
                    }
                }

                protected function getParentCategory($category_id, $parent_category){
                    $parent_category[] = $category_id;
                    if($category_id > 0) {
                        $category = $this->model_catalog_category->getCategory($category_id);
                        $parent_id = $category['parent_id'];
                        getParentCategory($parent_id, $parent_category);
                    }
                    return $parent_category;
                }

                protected function generatePath ($category_id, $path) {
                            $category_info = $this->model_catalog_category->getCategory($category_id);
                                if(isset($category_info['parent_id']) && $category_info['parent_id'] > 0) {
                                     $path = $category_info['parent_id'] . '_' . $path;
                                     $this->generatePath ($category_info['parent_id'], $path);
                                }
                        }
            ]]></add>
        </operation>
        <operation>
            <search position="after"><![CDATA[$parts = explode('_', (string)$this->request->get['path']);]]></search>
            <add><![CDATA[
                if(count($parts) == 1) {
                    $this->checkForCategory();
                }
            ]]></add>
        </operation>
    </file>
    
    <file name="catalog/controller/product/category.php">
        <operation>
            <search position="after"><![CDATA[$category_id = (int)array_pop($parts);]]></search>
            <add><![CDATA[
                if(empty($parts)) {
                    $this->checkForParent($category_id);
                }
            ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[public function index() {]]></search>
            <add><![CDATA[
                protected function checkForParent($category_id) {
                    $this->load->model('catalog/category');
                    $parent = $this->model_catalog_category->getParent($category_id);
                    if(!empty($parent) && $parent['parent_id'] > 0) {
                        $this->redirect($this->url->link('product/category', 'path=' . $parent['category_id'] . '_' . $category_id));
                        die;
                    }
                }
            ]]></add>
        </operation>
    </file>
    
    <file name="catalog/model/catalog/category.php">
        <operation>
            <search position="before"><![CDATA[public function getCategories($parent_id = 0) {]]></search>
            <add><![CDATA[
                public function getParent($category_id) {
                    $query = $this->db->query("SELECT c2.* 
                    FROM " . DB_PREFIX . "category c 
                    INNER JOIN " . DB_PREFIX . "category c2 ON c2.category_id = c.parent_id
                    WHERE c.category_id = '" . (int)$category_id . "' AND c2.status = '1'");
                    return $query->row;
                }
            ]]></add>
        </operation>
    </file>
    
</modification>
